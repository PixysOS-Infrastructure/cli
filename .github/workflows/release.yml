name: Build | Upload | Notify

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '**/*.md'

jobs:
  init:
    name: Set Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.build_version }}

    steps:
      - name: Checkout Version
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set_version
        name: Set Version
        run: |
          echo "build_version=$(cat VERSION.txt)" >> "$GITHUB_OUTPUT"
      
  build_upload:
    name: Build & Upload
    runs-on: ubuntu-latest
    needs: init
      
    strategy:
      fail-fast: false
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            image: amd64/python:3.11.3-buster
          - platform: arm64
            image: arm64v8/python:3.11.3-buster

    env:
      FILENAME: pixys.cli.${{ needs.init.outputs.version }}.${{ github.run_id }}.${{ matrix.platform }}

    steps:
      - name: Checkout scripts repository
        uses: actions/checkout@v4
        with:
          repository: PixysOS-Infrastructure/scripts
          token: ${{ secrets.GH_TOKEN }}
          ref: 'master'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/${{ matrix.platform }}'
          
      - name: Build
        run: |
          docker run --rm \
                     --platform ${{ matrix.platform }} \
                     --volume "${{ github.workspace }}:/app" \
                     --volume "${{ github.workspace }}/release:/release" \
                     ${{ matrix.image }} /bin/sh -c "bash /app/build.sh ${{ env.FILENAME }}"

      - name: Upload
        uses: ncipollo/release-action@v1
        env:
          VERSION: ${{ needs.init.outputs.version }}
        with:
          makeLatest: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GH_TOKEN }}
          tag: 'release/${{ needs.init.outputs.version }}'
          artifacts: '${{ github.workspace }}/release/${{ env.FILENAME }}'
          body: 'Release for version: ${{ needs.init.outputs.version }}'

  notify:
    name: Notify Telegeram
    runs-on: ubuntu-latest
    needs: [init, build_upload]
    env:
      HASH: ${{ needs.init.outputs.hash }}
      VERSION: ${{ needs.init.outputs.version }}
      
    steps:
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: 'html'
          message: |
            ðŸ”„ CLI Tool New Version Released:
            <code>curl https://raw.githubusercontent.com/PixysOS-Infrastructure/cli/${{ github.sha }}/.github/scripts/install-cli.sh | bash -s -- ${{ env.VERSION }} ${{ github.run_id }}</code>
